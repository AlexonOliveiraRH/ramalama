#!/bin/bash

available() {
  command -v $1 > /dev/null
}

select_container_manager() {
  if available podman; then
    echo "podman"
  elif available docker; then
    echo "docker"
  else
    echo "podman"
  fi
}

image_available() {
  [ -n "$($conman images -q $oci_image_name 2> /dev/null)" ]
}

check_if_in_hf_db() {
  local oci_image_name="podman-llm/$IMAGE_NAME"
  local host="raw.githubusercontent.com"
  local url="https://$host/ericcurtin/podman-llm/main/hf-db/$IMAGE_NAME"
  if ! image_available && local image_data="$(curl -fsSL $url)"; then
    local hf_repo="$(echo "$image_data" | sed -ne "s/^hf-repo\s//pg" | xargs)"
    local model="$(echo "$image_data" | sed -ne "s/^model\s//pg" | xargs)"
    local containerfile="$(echo "FROM quay.io/podman-llm/podman-llm:41
RUN huggingface-cli download $hf_repo $model
RUN ln -s \$(huggingface-cli download $hf_repo $model) $model
LABEL MODEL=/$model")"
    local vol="-v$HOME/.cache/huggingface/:/root/.cache/huggingface/"
    echo "$containerfile" | $conman build $vol -t $oci_image_name -
  fi

  if image_available; then
    IMAGE_NAME="$oci_image_name"
  fi
}

get_model() {
  podman inspect -f '{{ index .Config.Labels "MODEL"}}' $IMAGE_NAME
}

main() {
  set -e -o pipefail
  local conman="$(select_container_manager)"
  if [ "$#" -ne "2" ] || [ "$1" != "run" ] && [ "$1" != "pull" ] && \
     [ "$1" != "serve" ]; then
    echo "Usage: podman-llm [run|pull|serve] image_name"
    return 1
  fi

  IMAGE_NAME="$2"
  check_if_in_hf_db
  if [ "$1" = "run" ] || [ "$1" = "serve" ]; then
    local model="$(get_model)"
  fi

  local conman_run="$conman run --rm -it --security-opt=label=disable"
  conman_run+=" -v"$HOME":"$HOME" -v/tmp:/tmp"
  if [ "$1" = "run" ]; then
    $conman_run $IMAGE_NAME llama-main -m $model --log-disable --instruct
  elif [ "$1" = "pull" ]; then
    $conman pull $IMAGE_NAME
  elif [ "$1" = "serve" ]; then
    $conman_run -p 8080:8080 $IMAGE_NAME llama-server -m $model
  fi
}

main "$@"

