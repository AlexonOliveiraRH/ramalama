#!/bin/bash

available() {
  command -v $1 > /dev/null
}

select_container_manager() {
  if available podman; then
    echo "podman"
  elif available docker; then
    echo "docker"
  else
    echo "podman"
  fi
}

main() {
  set -e -o pipefail

  local conman="$(select_container_manager)"

  if [ "$#" -ne "2" ] || [ "$1" != "run" ] && [ "$1" != "pull" ] && \
     [ "$1" != "serve" ]; then
    echo "Usage: podman-llm [run|pull|serve] image_name"
    return 1
  fi

  local image_name="$2"

  local image_data
  if image_data="$(curl -fsSL https://raw.githubusercontent.com/ericcurtin/podman-llm/main/hf-db/$image_name)"; then
    local hf_repo="$(echo "$image_data" | sed -ne "s/^hf-repo\s//pg" | xargs)"
    local model="$(echo "$image_data" | sed -ne "s/^model\s//pg" | xargs)"
    image_name="podman-llm/$2"
    local containerfile="$(cat <<-END
FROM quay.io/podman-llm/podman-llm:41
LABEL model=/$model
RUN llama-main --hf-repo $hf_repo -m $model
END
)"

    if [ -z "$($conman images -q $image_name 2> /dev/null)" ]; then
      echo "$containerfile" | $conman build -t $image_name -
    fi
  fi

  local gguf
  if [ "$1" = "run" ] || [ "$1" = "serve" ]; then
    gguf="$(podman inspect -f '{{ index .Config.Labels "model"}}' $image_name)"
  fi

  if [ "$1" = "run" ]; then
    $conman run --rm -it --security-opt=label=disable -v"$HOME":"$HOME" -v/tmp:/tmp $image_name llama-main -m $gguf --log-disable --instruct
  elif [ "$1" = "pull" ]; then
    if [ -z "$($conman images -q $image_name 2> /dev/null)" ]; then
      $conman pull $image_name
    fi
  elif [ "$1" = "serve" ]; then
    $conman run -p 8080:8080 --rm -it --security-opt=label=disable -v"$HOME":"$HOME" -v/tmp:/tmp $image_name llama-server -m $gguf
  fi
}

main "$@"

