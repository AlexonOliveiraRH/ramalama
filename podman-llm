#!/bin/bash

available() {
  command -v $1 > /dev/null
}

select_container_manager() {
  if available podman; then
    CONMAN="podman"
  elif available docker; then
    CONMAN="docker"
  else
    CONMAN="podman"
  fi
}

main() {
  set -e -o pipefail

  select_container_manager

  if [ "$#" -ne "2" ] || [ "$1" != "run" ] && [ "$1" != "pull" ] && \
     [ "$1" != "serve" ]; then
    echo "Usage: podman-llm [run|pull|serve] image_name"
    return 1
  fi

  declare -A hf_repos
  declare -A model_files
  while read -r id hf_repo model_file; do
    if [ -n "${hf_repos[$hf_repo]}" ]; then
      hf_repos["$id"]="${hf_repos[$hf_repo]}"
      model_files["$id"]="${model_files[$hf_repo]}"
    else
      hf_repos["$id"]="$hf_repo"
      model_files["$id"]="$model_file"
    fi
  done <<< "$(curl -fsSL https://raw.githubusercontent.com/ericcurtin/podman-llm/main/hf-db.txt)"

  local image_name="$2"
  if [ -n "${hf_repos[$2]}" ]; then
    image_name="podman-llm/$2"
    local containerfile="$(cat <<-END
FROM quay.io/podman-llm/podman-llm:41

RUN llama-main --hf-repo ${hf_repos[$2]} -m ${model_files[$2]}
END

)"

    if [ -z "$($CONMAN images -q $image_name 2> /dev/null)" ]; then
      echo "$containerfile" | $CONMAN build -t $image_name -
    fi
  fi

  if [ "$1" = "run" ]; then
    $CONMAN run --rm -it --security-opt=label=disable -v"$HOME":"$HOME" -v/tmp:/tmp $image_name llama-main -m /${model_files[$2]} --log-disable --instruct
  elif [ "$1" = "pull" ]; then
    if [ -z "$($CONMAN images -q $image_name 2> /dev/null)" ]; then
      $CONMAN pull $image_name
    fi
  elif [ "$1" = "serve" ]; then
    $CONMAN run -p 8080:8080 --rm -it --security-opt=label=disable -v"$HOME":"$HOME" -v/tmp:/tmp $image_name llama-server -m /${model_files[$2]}
  fi
}

main "$@"

