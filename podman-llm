#!/bin/bash

available() {
  command -v $1 > /dev/null
}

select_container_manager() {
  if available podman; then
    CONMAN="podman"
  elif available docker; then
    CONMAN="docker"
  else
    CONMAN="podman"
  fi
}

# Function to check and replace model names
replace_model() {
  local prefix="quay.io/podman-llm"
  local arg=$1
  for model in "${run_models[@]}"; do
    if [[ "$arg" == "$model" ]]; then
      echo "$prefix/$arg"
      return
    fi
  done

  echo "$arg"
}

main() {
  set -e -o pipefail

  select_container_manager

  declare -A hf_repos
  declare -A model_files
  while read -r id hf_repo model_file; do
    if [ -n "${hf_repos[$hf_repo]}" ]; then
      hf_repos["$id"]="${hf_repos[$hf_repo]}"
      model_files["$id"]="${model_files[$hf_repo]}"
    else
      hf_repos["$id"]="$hf_repo"
      model_files["$id"]="$model_file"
    fi
  done <<< "$(curl -fsSL https://raw.githubusercontent.com/ericcurtin/podman-llm/main/hf-db.txt)"

  new_args=()

  # Loop through all arguments and replace them if necessary
  for arg in "$@"; do
    if [ -n "${hf_repos[$1]}" ]; then
      tag="podman-llm/$2"

      containerfile="$(cat <<-END
FROM quay.io/podman-llm/podman-llm:41

RUN llama-main --hf-repo ${hf_repos[$1]} -m ${model_files[$1]}

ENTRYPOINT ["llama-main", "-m", "/${model_files[$1]}", "--log-disable"]
CMD ["--instruct"]
END

)"

      if [ -z "$($CONMAN images -q $tag 2> /dev/null)" ]; then
        echo "$containerfile" | $CONMAN build -t $tag -
      fi

      new_args+=("$tag")
    else
      new_args+=("$arg")
    fi
  done

  # Update the positional parameters
  set -- "${new_args[@]}"

  if [ "$1" = "run" ]; then
    shift 1
    $CONMAN run --rm -it --security-opt=label=disable -v"$HOME":"$HOME" -v/tmp:/tmp "$@"
    return 0
  fi

  podman "$@"
}

main "$@"

